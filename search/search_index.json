{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Luau Runner is an open sourced Discord bot that can compile Luau code and execute it in Roblox's environment meaning you would get access to Roblox's API directly from Discord.</p>"},{"location":"#usage","title":"Usage","text":"<p>To use the bot, simply type one of the following commands in your Discord server:</p> <ul> <li><code>/ping</code>: Responds with \"Pong!\"</li> <li><code>/compile</code>: Executes the given Luau code in the Roblox environment.</li> </ul> <p>You could also right click or hold a code block and click on <code>Apps</code> and select a command to execute the action.</p>"},{"location":"#_1","title":"Welcome","text":""},{"location":"#security","title":"Security","text":"<p>This bot will not read private messages. In servers, the bot doesn't need any permissions since all it does is read and send messages, which only requires the user to have those permissions.</p>      Add Application       View on GitHub"},{"location":"Commands/","title":"Slash Commands","text":"<p>Here are the valid slash commands that you can use with the bot:</p> <ul> <li><code>/ping</code>: Responds with \"Pong!\"</li> <li><code>/compile</code>: Executes the given Luau code in the Roblox environment.</li> <li><code>/help</code>: Brings them here</li> <li><code>/input</code>: sends inputs to io.read() when compiling code</li> <li><code>/hiddeninput</code>: sends inputs to io.read() without notifying the channel</li> </ul>"},{"location":"Commands/#application-commands","title":"Application Commands","text":"<p>Here are the valid application commands that you can use with the bot:</p> <ul> <li><code>bytecode</code>: Compiles the given Luau code into bytecode.</li> <li><code>compile</code>: Executes the given Luau code in the Roblox environment.</li> <li><code>bytecodeWOption</code>: Compiles the given Luau code into bytecode with additional options and in a form.</li> <li><code>compileWOption</code>: Executes the given Luau code in the Roblox environment with additional options and in a form.</li> </ul> Info <p><code>compileWOption</code>'s options will also not work if the globals for the options were already defined in the code.</p> Info <p><code>compileWOption</code>'s <code>Additional Code</code> Option by default will append the code to the end of the original code. Example: Original Code: <code>print('hi')</code> Additional Code: <code>print('after')</code> Result:</p> <pre><code>print('hi')\nprint('after')\n</code></pre> <p>You can also add a <code>{CODE}</code> placeholder in the additional code to specify where the original code should be placed. Example: Original Code: <code>print('hi')</code> Additional Code: </p> <pre><code>print('before')\n{CODE}\nprint('after')\n</code></pre> <p>Result:</p> <pre><code>print('before')\nprint('hi')\nprint('after')\n</code></pre> <p>Info</p> <p><code>compile</code> will also truncate the output to reduce spam.</p> Flags <p>Commands executed using <code>bytecode</code> check for flags in the text that determine how the code is compiled. Here are the available flags: <code>--!optimize &lt;level 0-2&gt; --!debug &lt;level 0-2&gt; --!remarks</code></p> <p><pre><code>Example:\n```lua\n--!optimize 2\nprint(1+1) -- would optimize to print(2)\n</code></pre> ```</p> <p>Warning</p> <p>You are allowed to use application command on files as well but there is a maximum file size limit of 30 kb. Exceeding this limit will fail to compile.</p> <p>Warning</p> <p>Native code generation is currently not supported.</p>"},{"location":"Env/","title":"Executing code","text":"Warning <p>Because Luau Runner uses the execute code cloud api to run code, this means physics will not be simulated. Also do not trust benches ran from this bot as this is using <code>loadstring</code> which may not accurately represent the final execution environment.</p> <p>Luau Runner has a few custom globals that you can use.</p>"},{"location":"Env/#logtextstringcolorstringnewlineboolean","title":"<code>log(text:string,color:string,newLine:boolean?)</code>","text":"<p>Logs text to the console with a specified color. If newLine is true, it will add a new line after the text.</p> <p>Valid colors are (casing does not matter):</p> <ul> <li><code>black</code></li> <li><code>red</code></li> <li><code>green</code></li> <li><code>yellow</code></li> <li><code>blue</code></li> <li><code>purple</code></li> <li><code>white</code></li> <li><code>cyan</code></li> </ul>"},{"location":"Env/#timeout-number","title":"<code>TIMEOUT: number</code>","text":"<p>The maximum time (in seconds) that a code execution is allowed to run before terminated. Defaults to 15 seconds. </p> <pre><code>TIMEOUT = 3 -- make sure it's not a local\nwhile task.wait(.5) do\n    print('hello') -- will stop after 3 seconds\nend \n</code></pre> Info <p>The maximum time a session can run for is 5 minutes before it shuts down.</p>"},{"location":"Env/#output_logs-booleanlog","title":"<code>OUTPUT_LOGS: boolean|\"LOG\"</code>","text":"<p>Should a file be attached once the code execution finishes, containing all the outputs, defaults to false. If set to \"LOG\" then headers will not be included.</p>"},{"location":"Env/#timestamp-boolean","title":"<code>TIMESTAMP: boolean</code>","text":"<p>Should the time stamp be included when logging. If false it will not give a timeout warning and does not apply to errors. Defaults to true. </p>"},{"location":"Env/#iowriteany","title":"<code>io.write(...any)</code>","text":"<p>Does not add spaces between args and does not output tables expanded.If <code>TIMESTAMP</code> is false, then do not create a new line.</p>"},{"location":"Env/#ioreadstring","title":"<code>io.read():string</code>","text":"<p>yields the thread until <code>/input</code> is given. Unlike lua this does not have any args.</p> Warning <p><code>/input</code> will only send it for the latest session started by the user. It will not process inputs from other users.</p>"},{"location":"Env/#table-table","title":"<code>table: table</code>","text":"<p>The default table library has extended functions provided by Akari &lt;3.  These just provide a few gimmicky functions on top of the default table library. Check ExtendedTableLibrary for more information.</p> <pre><code>local t = {1,2,3,4,5,6,7,8,9}\nprint(table.getAllocatedArraySize(t)) --&gt; 9\nt[10] = 10\nprint(table.getAllocatedArraySize(t)) --&gt; 16\n\nprint(table.concat(t, \", \")) --&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 \n</code></pre>"},{"location":"ExtendedTableLibrary/","title":"ExtendedTableLibrary","text":""},{"location":"ExtendedTableLibrary/#api-reference","title":"API Reference","text":"<p>This extends the default table library in Luau with additional utility functions. source</p>"},{"location":"ExtendedTableLibrary/#getallocatedarraysizetbl-table","title":"<code>getAllocatedArraySize(tbl: table)</code>","text":"<p>Returns the allocated size of a Luau table's array part.</p>"},{"location":"ExtendedTableLibrary/#getallocatedhashsizetbl-table","title":"<code>getAllocatedHashSize(tbl: table)</code>","text":"<p>Returns the allocated size of a Luau table's hash part.</p>"},{"location":"ExtendedTableLibrary/#gettablememorysizetbl-table-includecontents-boolean","title":"<code>getTableMemorySize(tbl: table, includeContents: boolean?)</code>","text":"<p>Returns the total memory used by a table, optionally including contents.</p>"},{"location":"ExtendedTableLibrary/#gettablesizetbl-table-iscontiguous-boolean","title":"<code>getTableSize(tbl: table, isContiguous: boolean?)</code>","text":"<p>Counts the number of elements in a table. Optimized for contiguous arrays.</p>"},{"location":"ExtendedTableLibrary/#mergetablesinplace-boolean-depth-number-tables-table","title":"<code>mergeTables(inPlace: boolean?, depth: number?, ...tables: table)</code>","text":"<p>Recursively merges tables, combining their keys and values.</p>"},{"location":"ExtendedTableLibrary/#mergetableswithinplace-boolean-depth-number-resolver-function-tables-table","title":"<code>mergeTablesWith(inPlace: boolean?, depth: number?, resolver: function, ...tables: table)</code>","text":"<p>Recursively merges tables with a custom resolver for conflicts.</p>"},{"location":"ExtendedTableLibrary/#accumulatetablesinplace-boolean-tables-table","title":"<code>accumulateTables(inPlace: boolean?, ...tables: table)</code>","text":"<p>Recursively combines tables by summing matching numeric values and merging nested tables.</p>"},{"location":"ExtendedTableLibrary/#difftablesold-table-new-table","title":"<code>diffTables(old: table, new: table)</code>","text":"<p>Compares two tables and returns a breakdown of differences.</p>"},{"location":"ExtendedTableLibrary/#synctablesrc-table-target-table","title":"<code>syncTable(src: table, target: table)</code>","text":"<p>Synchronizes the keys and values of a source table with a target table.</p>"},{"location":"ExtendedTableLibrary/#maptabletbl-table-callback-function","title":"<code>mapTable(tbl: table, callback: function)</code>","text":"<p>Creates a new table by applying a callback to each key-value pair.</p>"},{"location":"ExtendedTableLibrary/#filtertabletbl-table-predicate-function-preallocate-boolean","title":"<code>filterTable(tbl: table, predicate: function, preAllocate: boolean?)</code>","text":"<p>Creates a new table containing only key-value pairs that satisfy the predicate.</p>"},{"location":"ExtendedTableLibrary/#reducetabletbl-table-reducer-function-initial-any","title":"<code>reduceTable(tbl: table, reducer: function, initial: any)</code>","text":"<p>Reduces a table to a single value by applying a reducer function.</p>"},{"location":"ExtendedTableLibrary/#grouptablebytbl-table-callback-function","title":"<code>groupTableBy(tbl: table, callback: function)</code>","text":"<p>Groups the elements of a table by a specified key or property.</p>"},{"location":"ExtendedTableLibrary/#tabletopairstbl-table","title":"<code>tableToPairs(tbl: table)</code>","text":"<p>Converts a table into an array of key-value pairs.</p>"},{"location":"ExtendedTableLibrary/#inverttabletbl-table","title":"<code>invertTable(tbl: table)</code>","text":"<p>Inverts a table, swapping its keys and values.</p>"},{"location":"ExtendedTableLibrary/#tableintersectiontbl1-table-tbl2-table-matchvalue-boolean","title":"<code>tableIntersection(tbl1: table, tbl2: table, matchValue: boolean?)</code>","text":"<p>Finds the intersection of two tables.</p>"},{"location":"ExtendedTableLibrary/#tabledifferencetbl1-table-tbl2-table-matchvalue-boolean-symmetric-boolean","title":"<code>tableDifference(tbl1: table, tbl2: table, matchValue: boolean?, symmetric: boolean?)</code>","text":"<p>Finds the difference between two tables.</p>"},{"location":"ExtendedTableLibrary/#removealltbl-table-value-any-array","title":"<code>removeAll(tbl: table, value: any | array)</code>","text":"<p>Removes all occurrences of a specified value from a table.</p>"},{"location":"ExtendedTableLibrary/#extendarraysizetbl-table-expandsize-number","title":"<code>extendArraySize(tbl: table, expandSize: number)</code>","text":"<p>Extends an array by a given size.</p>"},{"location":"ExtendedTableLibrary/#setarraysizetbl-table-newsize-number","title":"<code>setArraySize(tbl: table, newSize: number)</code>","text":"<p>Sets the length of an array to a new size (only expands).</p>"},{"location":"ExtendedTableLibrary/#truncatearrayarray-array-newsize-number","title":"<code>truncateArray(array: array, newSize: number)</code>","text":"<p>Truncates an array to a specified size.</p>"},{"location":"ExtendedTableLibrary/#concatarraysinplace-boolean-arrays-array","title":"<code>concatArrays(inPlace: boolean?, ...arrays: array)</code>","text":"<p>Concatenates multiple arrays into a single array.</p>"},{"location":"ExtendedTableLibrary/#unionarraysarrays-array","title":"<code>unionArrays(...arrays: array)</code>","text":"<p>Creates a new array with all unique elements from the input arrays.</p>"},{"location":"ExtendedTableLibrary/#flattenarraysrc-array-depth-number","title":"<code>flattenArray(src: array, depth: number?)</code>","text":"<p>Recursively flattens a nested array up to a given depth.</p>"},{"location":"ExtendedTableLibrary/#compactarrayarray-array-allocateexactsize-boolean-isarray-boolean","title":"<code>compactArray(array: array, allocateExactSize: boolean?, isArray: boolean?)</code>","text":"<p>Compacts a sparse array into a contiguous array.</p>"},{"location":"ExtendedTableLibrary/#fillwithvaluearray-array-value-any-startindex-number-endindex-number-sourcearray-array","title":"<code>fillWithValue(array: array, value: any, startIndex: number?, endIndex: number?, sourceArray: array?)</code>","text":"<p>Fills an array with a specified value from start to end index.</p>"},{"location":"ExtendedTableLibrary/#fillwithpatternarray-array-pattern-array-startindex-number-endindex-number","title":"<code>fillWithPattern(array: array, pattern: array, startIndex: number?, endIndex: number?)</code>","text":"<p>Fills an array with values from a source array, repeating the pattern as needed.</p>"},{"location":"ExtendedTableLibrary/#reversearrayarray-array","title":"<code>reverseArray(array: array)</code>","text":"<p>Reverses the order of elements in an array in place.</p>"},{"location":"ExtendedTableLibrary/#rotatearrayarray-array-shift-number","title":"<code>rotateArray(array: array, shift: number)</code>","text":"<p>Rotates the elements of an array by a specified number of positions.</p>"},{"location":"ExtendedTableLibrary/#slicearrayarray-array-startindex-number-endindex-number","title":"<code>sliceArray(array: array, startIndex: number?, endIndex: number?)</code>","text":"<p>Creates a new array containing a portion of the original array.</p>"},{"location":"ExtendedTableLibrary/#shufflearrayarray-array","title":"<code>shuffleArray(array: array)</code>","text":"<p>Randomly shuffles the elements of an array in place.</p>"},{"location":"ExtendedTableLibrary/#samplearrayarray-array-samplesize-number-allowduplicates-boolean","title":"<code>sampleArray(array: array, sampleSize: number, allowDuplicates: boolean?)</code>","text":"<p>Randomly selects a specified number of elements from an array.</p>"},{"location":"ExtendedTableLibrary/#samplevaluearray-array-startindex-number-endindex-number","title":"<code>sampleValue(array: array, startIndex: number?, endIndex: number?)</code>","text":"<p>Randomly selects a single value from an array.</p>"},{"location":"ExtendedTableLibrary/#removeduplicatearray-array-by-function","title":"<code>removeDuplicate(array: array, by: function?)</code>","text":"<p>Removes duplicate values from an array, preserving order.</p>"},{"location":"ExtendedTableLibrary/#swapremovearray-array-index-number","title":"<code>swapRemove(array: array, index: number)</code>","text":"<p>Removes an element from an array at a specified index using swap-remove.</p>"},{"location":"ExtendedTableLibrary/#getandremovearray-array-index-number-swap-boolean","title":"<code>getAndRemove(array: array, index: number, swap: boolean?)</code>","text":"<p>Retrieves and removes an element from an array at a specified index.</p>"},{"location":"ExtendedTableLibrary/#findandremovearray-array-value-any-swap-boolean","title":"<code>findAndRemove(array: array, value: any, swap: boolean?)</code>","text":"<p>Finds the first occurrence of a value in an array and removes it.</p>"},{"location":"ExtendedTableLibrary/#ziparrayarrays-array","title":"<code>zipArray(...arrays: array)</code>","text":"<p>Combines multiple arrays into a single array of tuples.</p>"},{"location":"ExtendedTableLibrary/#unziparrayzippedarray-array","title":"<code>unzipArray(zippedArray: array)</code>","text":"<p>Reverses the operation of <code>zipArray</code>.</p>"},{"location":"ExtendedTableLibrary/#partitionarrayarray-array-size-number","title":"<code>partitionArray(array: array, size: number)</code>","text":"<p>Splits an array into smaller arrays of a specified size.</p>"},{"location":"ExtendedTableLibrary/#partitionarraybyarray-array-predicate-function","title":"<code>partitionArrayBy(array: array, predicate: function)</code>","text":"<p>Splits an array into two arrays based on a predicate function.</p>"},{"location":"ExtendedTableLibrary/#binarysearcharray-array-value-any-comparator-function","title":"<code>binarySearch(array: array, value: any, comparator: function?)</code>","text":"<p>Performs a binary search on a sorted array.</p>"},{"location":"ExtendedTableLibrary/#getkeystbl-table","title":"<code>getKeys(tbl: table)</code>","text":"<p>Retrieves the keys of a table as an array.</p>"},{"location":"ExtendedTableLibrary/#getvaluestbl-table","title":"<code>getValues(tbl: table)</code>","text":"<p>Retrieves the values of a table as an array.</p>"},{"location":"ExtendedTableLibrary/#iscontiguousarraytbl-table","title":"<code>isContiguousArray(tbl: table)</code>","text":"<p>Checks if a table is a contiguous array.</p>"},{"location":"ExtendedTableLibrary/#issparsearraytbl-table","title":"<code>isSparseArray(tbl: table)</code>","text":"<p>Checks if a table is a sparse array.</p>"},{"location":"ExtendedTableLibrary/#isarraytbl-table","title":"<code>isArray(tbl: table)</code>","text":"<p>Checks if a table is an array (only positive integer keys).</p>"},{"location":"ExtendedTableLibrary/#isemptytbl-table","title":"<code>isEmpty(tbl: table)</code>","text":"<p>Checks if a table is empty.</p>"},{"location":"ExtendedTableLibrary/#haskeytbl-table-key-any","title":"<code>hasKey(tbl: table, key: any)</code>","text":"<p>Checks if a table contains a specific key.</p>"},{"location":"ExtendedTableLibrary/#hasvaluetbl-table-value-any","title":"<code>hasValue(tbl: table, value: any)</code>","text":"<p>Checks if a table contains a specific value.</p>"},{"location":"ExtendedTableLibrary/#countoccurencestbl-table-value-any","title":"<code>countOccurences(tbl: table, value: any)</code>","text":"<p>Counts the number of occurrences of a specific value in a table.</p>"},{"location":"ExtendedTableLibrary/#countkeysbytypetbl-table-keytype-string","title":"<code>countKeysByType(tbl: table, keyType: string)</code>","text":"<p>Counts the number of keys in a table that match a specific type.</p>"},{"location":"ExtendedTableLibrary/#countvaluesbytypetbl-table-valuetype-string","title":"<code>countValuesByType(tbl: table, valueType: string)</code>","text":"<p>Counts the number of values in a table that match a specific type.</p>"},{"location":"ExtendedTableLibrary/#keysofvaluetbl-table-targetvalue-any","title":"<code>keysOfValue(tbl: table, targetValue: any)</code>","text":"<p>Retrieves all keys in a table that map to a specific value.</p>"},{"location":"ExtendedTableLibrary/#deepcopytbl-table","title":"<code>deepCopy(tbl: table)</code>","text":"<p>Creates a recursive, deep copy of a table.</p>"},{"location":"ExtendedTableLibrary/#deepequala-any-b-any","title":"<code>deepEqual(a: any, b: any)</code>","text":"<p>Recursively compares two values for equality, handling nested tables.</p>"},{"location":"ExtendedTableLibrary/#deepfreezetbl-table-layers-number","title":"<code>deepFreeze(tbl: table, layers: number?)</code>","text":"<p>Recursively freezes a table and its nested tables.</p>"},{"location":"ExtendedTableLibrary/#findmatchtbl-table-filter-function","title":"<code>findMatch(tbl: table, filter: function)</code>","text":"<p>Finds the first key in a table that satisfies the given filter function.</p>"},{"location":"ExtendedTableLibrary/#everytbl-table-filter-function","title":"<code>every(tbl: table, filter: function)</code>","text":"<p>Checks if every key-value pair in a table satisfies the filter function.</p>"},{"location":"ExtendedTableLibrary/#sometbl-table-filter-function","title":"<code>some(tbl: table, filter: function)</code>","text":"<p>Checks if at least one key-value pair in a table satisfies the filter function.</p>"},{"location":"ExtendedTableLibrary/#tosettbl-table","title":"<code>toSet(tbl: table)</code>","text":"<p>Converts a table into a set (all keys map to true).</p>"},{"location":"ExtendedTableLibrary/#prettyprinttbl-table-indent-number","title":"<code>prettyPrint(tbl: table, indent: number?)</code>","text":"<p>Converts a table into a human-readable string format.</p>"},{"location":"ExtendedTableLibrary/#tocsvrows-array-delimiter-string","title":"<code>toCSV(rows: array, delimiter: string?)</code>","text":"<p>Converts a 2D array into a CSV string format.</p>"},{"location":"Privacy%20Policy/","title":"Privacy Policy","text":"<p>This bot collects basic data for analytics.</p> <p>Private messages to the bot will not be logged or read by the bot.</p>"},{"location":"Privacy%20Policy/#logged-data","title":"Logged Data","text":"<ul> <li>Timestamp of the command usage  </li> <li>Username and User ID of the person using the bot  </li> <li>Command invoked </li> <li>Message length (number of characters)  </li> </ul>"},{"location":"Privacy%20Policy/#data-not-collected","title":"Data Not Collected","text":"<ul> <li>The content of your messages is never stored or made public.  </li> <li>No personal or sensitive information beyond username and user ID is logged.  </li> </ul>"},{"location":"Privacy%20Policy/#purpose","title":"Purpose","text":"<ul> <li>The data is used only to monitor bot usage, optimize performance, and troubleshoot issues.  </li> <li>Raw data is kept private and is not shared publicly.  </li> </ul>"},{"location":"Privacy%20Policy/#example-of-logged-data","title":"Example of Logged Data","text":"Timestamp User User ID Command Data 9/2/2025 11:57 haotian2006 435997176477253682 bytecode Code length: 15,389 characters"},{"location":"TOS/","title":"Terms of Service (TOS)","text":"<p>By using this bot, you agree to the following terms:</p> <ol> <li> <p>Usage </p> <ul> <li>Don't use this to spam servers ex: spamming chat with commands.</li> <li>Don't use this to bypass filters.</li> <li>Follow Discord's Terms of Service and Community Rules.</li> </ul> </li> <li> <p>Data Collection </p> <ul> <li>The bot logs minimal data for functionality and analytics: timestamp, username, user ID, command used, and message length.  </li> <li>Message content is never stored or made public.</li> </ul> </li> <li> <p>Modification </p> <ul> <li>You are allowed to modify the bot, the source is open sourced.</li> </ul> </li> </ol>"}]}